<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A technical blog by Joshua Caleb Collins]]></title>
  <link href="http://joshuaccollins.github.io/atom.xml" rel="self"/>
  <link href="http://joshuaccollins.github.io/"/>
  <updated>2013-06-26T02:02:09-04:00</updated>
  <id>http://joshuaccollins.github.io/</id>
  <author>
    <name><![CDATA[Joshua Caleb Collins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating your foundation: Week 2:]]></title>
    <link href="http://joshuaccollins.github.io/blog/2013/06/25/week-2-buildling-your-foundation/"/>
    <updated>2013-06-25T11:34:00-04:00</updated>
    <id>http://joshuaccollins.github.io/blog/2013/06/25/week-2-buildling-your-foundation</id>
    <content type="html"><![CDATA[<h3>Week two of the three-week crash course about computer programming leveraging existing teaching tools.</h3>

<h4>Serendipity</h4>

<p>It was quite serendipitous that our guest speaker today at the <a href="http://www.flatironschool.com">Flatiron School</a> was no other than the legendary <a href="http://ejohn.org/">John Resig</a>, creator of <a href="http://jquery.com/">jQuery</a>. The timing was quite special because this week&rsquo;s focus is on JavaScript and jQuery. Pretty bloody awesome, right?!</p>

<p>This week we are breaking free from the basics of HTML and CSS and starting to learn more about how to make our sites more asthetically appealing and entertaining by integrating dynamic functions. So what&rsquo;s JavaScript and jQuery?</p>

<p>Well, thanks to the amazing team at <a href="http://www.skillcrush.com/terms/javascript.html">Skillcrush</a>, we have an artful explaination. Here is what they say about JavaScript and jQuery. Be sure to check out more of their <a href="http://skillcrush.com/terms/">tech terms</a> if you are interested. They rock!</p>

<h6>JavaScript:</h6>

<p>JavaScript is a programming language that helps make a web page interactive.
When you view a slideshow or get annoying popup ads &ndash; that&rsquo;s JavaScript. If you see your Facebook Timeline update or Google autocomplete a search term &ndash; that&rsquo;s JavaScript.
When most anything changes on a page without you clicking a link &ndash; that&rsquo;s JavaScript!
JavaScript is one of the few programming languages that can work in your browser. Because of its ubiquity and how easy it was to learn, for many years it was dismissed by professionals as being a toy for amateurs.
This all changed around ten years ago with the advent of &ldquo;AJAX&rdquo; and &ldquo;Web 2.0.&rdquo; These were sets of technology that used JavaScript in a whole new way, allowing the Web to be way more interactive than it had been before. So next time you use a Google Spreadsheet or watch a Tweet update on a web page, you can know what&rsquo;s going on &ndash; that&rsquo;s JavaScript!</p>

<h6>jQuery:</h6>

<p>jQuery is a library of preset JavaScript tasks that makes it easy and fast to make your site interactive and fun.</p>

<h1>Gametime!</h1>

<h2>WEEK 2</h2>

<h3>jQuery</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic                 </th>
<th> Source      </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> jQuery                </td>
<td> <a href="http://www.codecademy.com/tracks/jquery">Codecademy</a>  </td>
<td> 8 hrs. |</td>
</tr>
<tr>
<td></td>
<td> Try jQuery              </td>
<td> <a href="http://www.codeschool.com/courses/try-jquery">Code School</a> </td>
<td> 6 hrs. |</td>
</tr>
<tr>
<td></td>
<td> jQuery Air: Captain&rsquo;s Log    </td>
<td> <a href="http://www.codeschool.com/courses/jquery-air-captains-log">Code School</a> </td>
<td> 6 hrs. |</td>
</tr>
</tbody>
</table>


<h3>JavaScript</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic                 </th>
<th> Source      </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> JavaScript              </td>
<td> <a href="http://www.codecademy.com/tracks/javascript">Codecademy</a>  </td>
<td> 12 hrs. |</td>
</tr>
<tr>
<td></td>
<td> JavaScript Foundations       </td>
<td> <a href="http://teamtreehouse.com/library/websites/javascript-foundations">Treehouse</a> </td>
<td> 10 hrs. |</td>
</tr>
</tbody>
</table>


<h3>Week 2 Review Exercises</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic                 </th>
<th> Source      </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Build a Responsive Website       </td>
<td> <a href="http://teamtreehouse.com/library/websites/build-a-responsive-website">Treehouse</a>  </td>
<td> 5 hrs. |</td>
</tr>
<tr>
<td></td>
<td> Build an Interactive Website    </td>
<td> <a href="http://teamtreehouse.com/library/websites/build-an-interactive-website">Treehouse</a> </td>
<td> 8 hrs. |</td>
</tr>
</tbody>
</table>


<h3>Reading Resources:</h3>

<h5>(Optional)</h5>

<table>
<thead>
<tr>
<th></th>
<th> Title                 </th>
<th> Author(s)      </th>
<th> </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <a href="http://eloquentjavascript.net/">Eloquent JavaScript</a> </td>
<td> Marign Haverbeke </td>
<td></td>
</tr>
<tr>
<td></td>
<td> <a href="http://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X">Secrets of the JavaScript Ninja</a>  </td>
<td> John Resig (creator of jQuery) &amp; Bear Bibeault </td>
<td></td>
</tr>
<tr>
<td></td>
<td> <a href="http://www.amazon.com/jQuery-Action-Second-Edition-Bibeault/dp/1935182323">jQuery in Action</a> </td>
<td> Bear Bibeault &amp; Yehuda Katz </td>
<td></td>
</tr>
</tbody>
</table>


<p><a href="https://twitter.com/jcalebCollins">Feedback is always welcome. Drop me a line!</a></p>

<h6>Onward!</h6>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sweet Sinatra]]></title>
    <link href="http://joshuaccollins.github.io/blog/2013/06/23/sweet-sinatra/"/>
    <updated>2013-06-23T11:35:00-04:00</updated>
    <id>http://joshuaccollins.github.io/blog/2013/06/23/sweet-sinatra</id>
    <content type="html"><![CDATA[<p>SinMagick a front-end for image processing and thumbnailing with flexible storage options.</p>

<h2>Rapid Dashboard Making with Dashing</h2>

<p><img src="http://shopify.github.io/dashing/images/bowtie.png" title="" alt="Large icon" /></p>

<p>Using the one and only Ruby Sinatra developers are able to create high resolution dashboards using <a href="http://shopify.github.io/dashing/">Dashing.</a> This framework was originally created by the developers at Shopify who wanted to display custom dashboards on TV&rsquo;s around the office showing their progress and success. Since Shopify is an epicly awesome company I decided to take a closer look under the hood to see what we could find.</p>

<h4>Main takaways:</h4>

<ul>
<li><p>Use premade widgets, or fully create your own with scss, html, and coffeescript.</p></li>
<li><p>Widgets harness the power of data bindings to keep things DRY and simple. Powered by batman.js.</p></li>
<li><p>Use the API to push data to your dashboards, or make use of a simple ruby DSL for fetching data.</p></li>
<li><p>Drag &amp; Drop interface for re-arranging your widgets.</p></li>
<li><p>Host your dashboards on Heroku in less than 30 seconds.</p></li>
<li><p>Every new Dashing project comes with sample widgets &amp; sample dashboards for you to explore.</p></li>
<li><p>Widgets use <a href="http://batmanjs.org/docs/batman.html#batman-view-bindings-how-to-use-bindings">batman bindings</a> in order to update their contents. Whenever the data changes, the DOM will automatically reflect the changes.</p></li>
<li><p>When you pass in data with a title attribute, the widget&rsquo;s title variable will change, and so will all DOM elements bound to it. No need to handle that yourself which is nice.</p></li>
</ul>


<h4>A responce from Shopify on the following question:</h4>

<p>&ldquo;Why use Dashing when there are plenty of cloud based dashboards out there?&rdquo;</p>

<h6>Use our own authentication.</h6>

<p>  Many online platforms give you private URLs to your dashboards. Those can be tricky to remember, and can accidentally fall in the wrong hands. With Dashing, you can add whatever auth you want. We use Google Auth.</p>

<h5>Be completely customizable.</h5>

<p>  We didn&rsquo;t want to be limited by the widgets that are available on other platforms. We also wanted all of our code to be in version control, and editable in whatever IDE we want.</p>

<h5>Keep instances of the same widget in sync.</h5>

<p>  Many online dashboards give unique ids for every widget instance you create. This means that if you want to update 3 identical widgets showing &lsquo;daily sales&rsquo;, you&rsquo;ll need to use the API to push the value to all 3 instances. With Dashing, identical widgets all have the same id, meaning less duplication, and complete synchrony across all dashboards.</p>

<p>That&rsquo;s it for my review of Dashing. Looks like a pretty cool tool for dashboards. Just remember I&rsquo;m only four weeks into my development careers so take everything with a grain of salt. Main information from this post comes from <a href="http://shopify.github.io/dashing/">Shopify&rsquo;s Github portal</a> &amp; <a href="https://github.com/Shopify/dashing/wiki">wiki</a>.</p>

<h5>Bonus: <a href="http://dashingdemo.herokuapp.com/sample">Click here to checkout some live dashboard build on Dashing!</a></h5>

<p><a href="https://twitter.com/jcalebCollins">Feedback is always welcome. Drop me a line!</a></p>

<h6>Onward!</h6>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An introduction to Ruby Motion]]></title>
    <link href="http://joshuaccollins.github.io/blog/2013/06/16/an-introduction-to-ruby-motion/"/>
    <updated>2013-06-16T23:02:00-04:00</updated>
    <id>http://joshuaccollins.github.io/blog/2013/06/16/an-introduction-to-ruby-motion</id>
    <content type="html"><![CDATA[<p>This weekend we had yet another plethora of assignments to complete for our <a href="https://flatironschool.com">Flatiron School</a> <a href="https://twitter.com/aviflombaum">Captain</a>. One of the assignments was to dive into <a href="http://www.speakerdeck.com">Speaker Deck</a> and find something of interest and report back to the class.</p>

<p>We&rsquo;re about to start our third week and I feel like I&rsquo;ve been thrown into the rushing rapids of a river that will eventually spit me out in the &ldquo;deep end&rdquo; of the learning pool. For some reason, even though I&rsquo;m still grasping for air and am having difficulties with the current basics of Ruby, I decided to explore <a href="www.RubyMotion.com">RubyMotion</a>. I was sick of the basics, or should I say the frustration with feeling like I was walking with concrete shoes and wanted to explore something new.</p>

<p>Thanks to <a href="http://openmonkey.com/">Tim Riley&rsquo;s</a> presentation <a href="http://openmonkey.com/">Introduction to RubyMotion</a> on Speaker Deck, I was able to start scratching the service on how Ruby could be used to developed iOS apps for iPhone, iPad, and OSX for MAC.</p>

<p>This blog post will focus on the big take-aways I got from Tim&rsquo;s presentation with a little additional research on the <a href="www.RubyMotion.com">RubyMotion</a> site. Before diving into the overview, please know I am new to the development world and have no experience developing for mobile devices.</p>

<h3>RubyMotion Takeaways:</h3>

<h5>Terminal</h5>

<p>That&rsquo;s right, you get to use your terminal to build your iOS app. Some <a href="http://devcodehack.com/xcode-sucks-and-heres-why/">people</a> are pretty <a href="http://code-ninja.org/blog/2012/03/14/ios-pain-points-autocomplete-in-xcode-is-a-usability-disaster/">unhappy</a> with the Xcode process and development environment. Developers wanted to simply use their Terminal to develop and test their mobile products and that&rsquo;s what RubyMotion gave them.</p>

<h5>Editor</h5>

<p>Once again, users were very unhappy with the editor in Xcode so RubyMotion allows users to continue using their own Text Editors. Since I&rsquo;m a newbie and haven&rsquo;t experienced the difficulties with Xcode, I&rsquo;ll trust the Tim&rsquo;s notes and the fact that RubyMotion has it as one of the six selling points on their website it must be important.</p>

<h5>Interactive</h5>

<p>There is an interactive console that lets you navigate and explore the process in your code and on a iPhone simulator. This function is pretty cool because it somewhat acts as an &ldquo;inspect element&rdquo; tool on websites bringing you to the exact spot on the code with a single click so you can make changes and edits.</p>

<h5>3rd Party Provider</h5>

<p>Learning more and more about the development community, the one thing I have been so surprised with is all the &ldquo;open-source&rdquo; tools there are, for FREE. Crazy. Well, in this case, RubyMotion is not open-sourced and comes with a <a href="http://sites.fastspring.com/hipbyte/product/rubymotion">$200</a> price tag.</p>

<h5>Still need to know Objective-C</h5>

<p>Yes, bummer. I was hoping for a turn-key solution that would magically transport my code into a beautiful iOS app. In this case, RubyMotion does do a lot of the heavy lifting, but you will need to learn how to interpret Apple&rsquo;s interfaces and understand how to call your code from Ruby. RubyMotion does provide helpful documentation.</p>

<h5>GEMS != work…what?!?!?!</h5>

<p>Yes, I couldn&rsquo;t believe it too. Last week we started exploring the <a href="http://rubygems.org/">Ruby Gem Library</a> and learning about the power behind Ruby, so I was very very surprised to learn RubyMotion did not support it. I don&rsquo;t know implications this will have on my future work, but hopefully there is a solid solution. Here is what RubyMotion said about the Gem Issue: &ldquo;Because RubyMotion implements a dialect of Ruby that is statically compiled, regular Ruby gems will not work in RubyMotion.&rdquo; They do have their &ldquo;own flavor of gems&rdquo; that they call <a href="http://rubymotion-wrappers.com/">RubyMotion wrappers</a>.</p>

<h5>Buy it!</h5>

<p>If you want to build for iOS and don&rsquo;t want to have to learn Objective-C from scratch, then it&rsquo;s the best option you have for mobile development.</p>

<p>A big thank you again to <a href="http://openmonkey.com/">Tim Riley</a> for his <a href="http://openmonkey.com/">presentation</a> on Speaker Deck. For more advanced developers, and those with experience with RubyMotion, please do excuse my novice review of this tool. If you have any further suggestions please feel free to share them with me.</p>

<p><a href="https://twitter.com/jcalebCollins">Feedback is always welcome. Drop me a line!</a></p>

<h6>Onward!</h6>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating your foundation: Week 1]]></title>
    <link href="http://joshuaccollins.github.io/blog/2013/06/11/creating-your-foundation/"/>
    <updated>2013-06-11T19:26:00-04:00</updated>
    <id>http://joshuaccollins.github.io/blog/2013/06/11/creating-your-foundation</id>
    <content type="html"><![CDATA[<h2>The three-week crash course about computer programming leveraging existing teaching tools.</h2>

<h3>Initial Greeting and Background</h3>

<p>Greetings and welcome to my technical blog. This is my first blog (ever) so bear with me on the initial few posts until I find the rhythm. I am currently in the second week of my twelve-week epic journey as a student at The Flatiron School in New York City. At the end of this quest, I aim to have the skills and mindset to be a Ruby on Rails developer. Before jumping into the post, I wanted to give you some background on how I ended up in a fully immersive coding course and put everything else in my life on hold.</p>

<p>My first experience interacting with technology (outside of surfing the web) came after I graduated college and was embarking on my first startup. We came to a point where we could no longer afford to pay our development firm to update our website. I dove into DreamWeaver and started to learn the ins-and-outs of HTML and PHP. The experience was a rude awakening and the first time I desired to really know how to make things work from a development perspective&hellip; but that phase was limited and quickly forgotten.</p>

<p>A couple of years later, I launched my second venture where technology was our core offering. I was still on the management side but exposed to the technology aspect of the following: working with a developer, firing a developer, dumping the initial code, learning about project management, understanding the conceptual framework of building websites, databases, learning the importance of user flow and user interface design, finding bugs, fixing bugs, and finding more bugs. It was too much, and I was way in over my head. Many times through the process I muttered to myself, &ldquo;If only I knew how to code&hellip;&rdquo; I wouldn&rsquo;t have had to depend on outside developers or initial seed-funding to get my ideas off the ground.</p>

<p>Fast forward a few more years, and I found myself looking to start another company. Since I had still not found my much-needed technical co-founder, I decided to take things into my own hands and enrolled in The Flatiron School. I was honored to be one of the few accepted. Before starting the semester, there was a plethora of prep-work that was required of the students, amounting to over 100 hours. Through this process I was exposed to many various tools online aimed at helping beginners grasp the concepts of coding.</p>

<p>My posts will be in three parts split into three weeks and will pull from the various resources that exist online. This blog is written for those who do not have an experience with web development. I hope to provide a solid foundation from which you will be able to dive further into learning other development frameworks such as Ruby, Python, PHP, etc.</p>

<h2>WEEK 1</h2>

<h3>The Basics</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic                 </th>
<th> Source      </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Website Basics        </td>
<td> <a href="http://teamtreehouse.com/library/websites/website-basics/website-basics">Treehouse</a>  </td>
<td> 1 hr. |</td>
</tr>
<tr>
<td></td>
<td> Graphic Basics        </td>
<td> <a href="http://teamtreehouse.com/library/websites/technology-foundations/graphic-basics">Treehouse</a> </td>
<td> 30 min. |</td>
</tr>
<tr>
<td></td>
<td> Learning Shortcuts    </td>
<td> <a href="https://www.shortcutfoo.com">ShortcutFoo</a> </td>
<td> TBD |</td>
</tr>
<tr>
<td></td>
<td> Aesthetic Foundation  </td>
<td> <a href="http://teamtreehouse.com/library/websites/aesthetic-foundations">Treehouse</a> </td>
<td> 2.5 hrs. |</td>
</tr>
<tr>
<td></td>
<td> Technology Terms      </td>
<td>  <a href="http://www.skillcrush.com/terms/">Skillcrush</a> </td>
<td> 1 hr. |</td>
</tr>
</tbody>
</table>


<h3>Command Line // Terminal // Bash</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic       </th>
<th> Source        </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Getting started with the Console </td>
<td> <a href="http://teamtreehouse.com/library/programming/console-foundations/getting-started-with-the-console">Treehouse</a> </td>
<td> 1 hr. |</td>
</tr>
<tr>
<td></td>
<td> Command Line Basics </td>
<td> <a href="http://blog.teamtreehouse.com/command-line-basics">Treehouse</a> </td>
<td> 30 min. |</td>
</tr>
<tr>
<td></td>
<td> Bash Basics </td>
<td> <a href="http://lifehacker.com/5633909/who-needs-a-mouse-learn-to-use-the-command-line-for-almost-anything">Lifehacker</a> </td>
<td> 30 min. |</td>
</tr>
<tr>
<td></td>
<td> Unix for Mac OS X </td>
<td> <a href="http://www.lynda.com/Mac-OS-X-10-6-tutorials/Unix-for-Mac-OS-X-Users/78546-2.html">Lynda</a> </td>
<td> 7 hrs. |</td>
</tr>
</tbody>
</table>


<h3>HMTL</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic       </th>
<th> Source       </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Web Fundamentals (Focus on 1-3) </td>
<td> <a href="http://www.codecademy.com/tracks/web">Codecademy</a> </td>
<td> 4 hrs. |</td>
</tr>
<tr>
<td></td>
<td> HTML </td>
<td> <a href="http://teamtreehouse.com/library/websites/html">Treehouse</a> </td>
<td> 8 hrs. |</td>
</tr>
</tbody>
</table>


<h3>CSS</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic      </th>
<th> Source      </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Web Fundamentals (Focus on 4-6) </td>
<td> <a href="http://www.codecademy.com/tracks/web">Codecademy</a> </td>
<td> 4 hrs. |</td>
</tr>
<tr>
<td></td>
<td> CSS Foundations </td>
<td> <a href="http://teamtreehouse.com/library/websites/css-foundations-2">Treehouse</a> </td>
<td> 15 hrs. |</td>
</tr>
</tbody>
</table>


<h3>Week 1 Review Exercises</h3>

<table>
<thead>
<tr>
<th></th>
<th> Topic       </th>
<th> Source        </th>
<th> Est. Time </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> 3 for 5 (HTML5 &amp; CSS3) </td>
<td> <a href="http://www.codeschool.com/courses/functional-html5-css3">Code School</a> </td>
<td> 6 hrs. |</td>
</tr>
<tr>
<td></td>
<td> Build a Simple Website </td>
<td> <a href="http://teamtreehouse.com/library/websites/build-a-simple-website">Treehouse</a> </td>
<td> 6 hrs. |</td>
</tr>
</tbody>
</table>


<p><a href="https://twitter.com/jcalebCollins">Feedback is always welcome. Drop me a line!</a></p>

<h6>Onward!</h6>
]]></content>
  </entry>
  
</feed>
